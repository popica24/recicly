# Stage 1: Builder - install dependencies
FROM python:3.13-slim AS builder

WORKDIR /app

# Install system dependencies required for psycopg2-binary
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq-dev \
    gcc \
    && rm -rf /var/lib/apt/lists/* && \
    pip install --upgrade pip && pip install uv==0.7.13

# Copy and install dependencies using UV
COPY requirements.txt ./requirements.txt
RUN uv pip install --system -r requirements.txt --no-cache

# Install Gunicorn separately for production
RUN uv pip install --system gunicorn==23.0.0 --no-cache

COPY . .

# Stage 2: Final image - minimal and secure
FROM python:3.13-slim

WORKDIR /app

# Install UV for final runtime & required system dependencies
RUN pip install --upgrade pip && pip install uv==0.7.13 && \
    apt-get update && apt-get install -y --no-install-recommends libpq5 && \
    rm -rf /var/lib/apt/lists/*

# Copy and prepare the entrypoint script
COPY entrypoint.prod.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh && sed -i 's/\r$//g' /entrypoint.sh

# Create and switch to a non-root user for security
RUN adduser --disabled-password --gecos "" reciclyuser \
    && chown -R reciclyuser:reciclyuser /app /entrypoint.sh \
    && chmod +x /entrypoint.sh

USER reciclyuser

# Copy dependencies and application code from builder stage
COPY --from=builder /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages
COPY --from=builder /usr/local/bin/gunicorn /usr/local/bin/
COPY --from=builder /app /app

# Environment settings
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Expose the application port
EXPOSE 8000

# Start the application using the entrypoint script
ENTRYPOINT ["/entrypoint.sh"]
